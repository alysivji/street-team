{"version":3,"sources":["../node_modules/cropperjs/dist/cropper.js","index.js"],"names":["global","factory","exports","module","define","amd","self","Cropper","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_defineProperty","value","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","arr","_arrayWithoutHoles","Array","isArray","arr2","_iterableToArray","iter","toString","call","from","_nonIterableSpread","TypeError","IS_BROWSER","window","document","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","isNaN","Number","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","error","isFunction","slice","toArray","callback","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","test","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","addClass","elem","classList","add","className","trim","indexOf","removeClass","remove","replace","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","getData","name","dataset","getAttribute","setData","setAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","transform","join","WebkitTransform","msTransform","getPointer","_ref2","endOnly","pageX","pageY","end","endX","endY","startX","startY","getAdjustedSizes","_ref4","height","width","isValidWidth","isValidHeight","adjustedWidth","fromCharCode","String","REGEXP_DATA_URL_HEAD","resetAndGetOrientation","arrayBuffer","dataView","orientation","DataView","littleEndian","app1Start","ifdStart","getUint8","offset","byteLength","exifIDCode","tiffOffset","getStringFromCharCode","start","str","endianness","getUint16","firstIFDOffset","getUint32","_length","_offset","setUint16","render","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","max","offsetWidth","offsetHeight","imageData","rotated","abs","naturalWidth","naturalHeight","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","minWidth","minHeight","maxWidth","maxHeight","newCanvasLeft","newCanvasTop","minLeft","min","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","canvas","renderImage","limitCropBox","image","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","alt","createElement","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","removeData","removeAttribute","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","ratio","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","n","setCropBoxData","hasClass","setDragMode","dragBox","contains","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","buttons","button","pointerType","ctrlKey","action","pointers","changedTouches","touch","identifier","pointerId","originalEvent","cropping","change","right","bottom","renderable","shiftKey","pointer","range","x","y","check","side","ACTION_EAST","ACTION_WEST","ACTION_NORTH","ACTION_SOUTH","ACTION_ALL","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_WEST","ACTION_SOUTH_EAST","ACTION_MOVE","move","ACTION_ZOOM","getMaxZoomRatio","pointers2","ratios","pointer2","x1","y1","x2","y2","z1","sqrt","sort","a","b","ACTION_CROP","p","methods","reset","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","getPointersCenter","count","_ref3","rotateTo","_scaleX","scale","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","getSourceCanvas","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","imageNaturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","_ref8$maxHeight","_ref8$minWidth","_ref8$minHeight","context","getContext","maxSizes","minSizes","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","drawImage","map","param","floor","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","sourceWidth","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceHeight","srcX","srcY","setAspectRatio","mode","croppable","AnotherCropper","_classCallCheck","instance","Constructor","tagName","Error","reloading","sizing","init","_createClass","protoProps","staticProps","toDataURL","ArrayBuffer","read","base64","binary","atob","uint8","Uint8Array","charCodeAt","clone","dataURLToArrayBuffer","xhr","XMLHttpRequest","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","arrayBufferToDataURL","mimeType","chunks","subarray","btoa","_parseOrientation","parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","isIOSWebKit","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","getElementById","updateFormValues"],"mappings":"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","file":"index.js","sourceRoot":"../crop","sourcesContent":["/*!\n * Cropper.js v1.5.6\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2019-10-04T04:33:48.372Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Cropper = factory());\n}(this, function () { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(source, true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(source).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i; // Misc\n  // Inspired by the default width and height of a canvas element.\n\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: 200,\n    minContainerHeight: 100,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          toArray(data).forEach(function (value, key) {\n            callback.call(data, value, key, data);\n          });\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link http://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IS_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = _objectSpread2({}, pointers);\n\n    var ratios = [];\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        ratios.push(ratio);\n      });\n    });\n    ratios.sort(function (a, b) {\n      return Math.abs(a) < Math.abs(b);\n    });\n    return ratios[0];\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : _objectSpread2({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = []; // Chunk Typed Array for better performance (#435)\n\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation; // Ignores range error when the image does not have correct Exif information\n\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n\n          offset += 1;\n        }\n      }\n\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n\n          if (littleEndian || endianness === 0x4D4D\n          /* bigEndian */\n          ) {\n              if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n                if (firstIFDOffset >= 0x00000008) {\n                  ifdStart = tiffOffset + firstIFDOffset;\n                }\n              }\n            }\n        }\n      }\n\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n\n        var _offset;\n\n        var i;\n\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112\n          /* Orientation */\n          ) {\n              // 8 is the offset of the current tag's value\n              _offset += 8; // Get the original orientation value\n\n              orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n              dataView.setUint16(_offset, 1, littleEndian);\n              break;\n            }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n\n      default:\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n        height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      canvasData.left = (containerData.width - canvasWidth) / 2;\n      canvasData.top = (containerData.height - canvasHeight) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      this.initialImageData = assign({}, imageData);\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n          crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        img.alt = alt;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var minContainerWidth = Number(options.minContainerWidth) || MIN_CONTAINER_WIDTH;\n      var minContainerHeight = Number(options.minContainerHeight) || MIN_CONTAINER_HEIGHT;\n\n      if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n        return;\n      }\n\n      var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      event.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n          button = event.button;\n\n      if (this.disabled // Handle mouse event and pointer event and ignore touch event\n      || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && ( // No primary button (Usually the left button)\n      isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 // Open context menu\n      || event.ctrlKey)) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      event.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      event.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n\n          default:\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n\n        default:\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper =\n  /*#__PURE__*/\n  function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"http://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // Detect the mime type of the image directly if it is a Data URL\n\n\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n\n          return;\n        } // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr; // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData; // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin = element.crossOrigin;\n        var crossOriginUrl = url;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          } // Bust cache when there is not a \"crossOrigin\" property (#519)\n\n\n          crossOriginUrl = addTimestamp(url);\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true; // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Most modern browsers (excepts iOS WebKit)\n\n\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n}));\n","import 'cropperjs/dist/cropper.css';\nimport Cropper from 'cropperjs';\n\nconst image = document.getElementById('image');\nconst cropper = new Cropper(image, {\n  viewMode: 1,\n  dragMode: 'crop',\n  initialAspectRatio: 16 / 9,\n  crop(event) { updateFormValues(event) },\n})\n\nfunction updateFormValues(event) {\n  document.getElementById('cropLeft').value = event.detail.x;\n  document.getElementById('cropTop').value = event.detail.y;\n  document.getElementById('cropWidth').value = event.detail.width;\n  document.getElementById('cropHeight').value = event.detail.height;\n}\n"]}